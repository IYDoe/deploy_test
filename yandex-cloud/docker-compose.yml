version: '3.9'

services:
  client:
    container_name: prakticum-client
    image: {{ env.CLIENT_IMAGE }}
    build:
      context: .
      dockerfile: Dockerfile.client
      args:
        CLIENT_PORT: 3000
    restart: always
    ports:
      - '3000:80'
    environment:
      - CLIENT_PORT=3000
      - SERVER_PORT=3001
    networks:
      - awesome

  server:
    container_name: prakticum-server
    image: {{ env.SERVER_IMAGE }}
    build:
      context: .
      dockerfile: Dockerfile.server
      args:
        SERVER_PORT: 3001
    depends_on:
      client:
        condition: service_started
      postgres:
        condition: service_healthy
    restart: always
    ports:
      - '{{ env.SERVER_PORT }}:{{ env.SERVER_PORT }}'
    environment:
      CLIENT_URL: prakticum-client:80
      SERVER_PORT: 3001
      POSTGRES_PORT: 5432
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_HOST: ''
    networks:
      - awesome

  postgres:
    container_name: prakticum-postgres
    image: postgres:14
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - prakticum-postgres:/var/lib/postgresql/data
    networks:
      - awesome
    restart: always
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  prakticum-postgres:
    driver: local

networks:
  awesome:
    driver: bridge
